{"ast":null,"code":"var _jsxFileName = \"D:\\\\Map - Copy - Copy\\\\incois-ui\\\\src\\\\contexts\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/LanguageContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport translations from '../translations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  // Load saved language from localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('oceanfront_language');\n    if (saved && translations[saved]) {\n      setCurrentLanguage(saved);\n    }\n  }, []);\n  const changeLanguage = langCode => {\n    if (translations[langCode]) {\n      setCurrentLanguage(langCode);\n      localStorage.setItem('oceanfront_language', langCode);\n    }\n  };\n  const t = key => {\n    return translations[currentLanguage][key] || translations.en[key] || key;\n  };\n  const languages = [{\n    code: 'en',\n    name: 'English',\n    flag: 'üá∫üá∏'\n  }, {\n    code: 'hi',\n    name: '[translate:‡§π‡§ø‡§Ç‡§¶‡•Ä]',\n    flag: 'üáÆüá≥'\n  }, {\n    code: 'mr',\n    name: '[translate:‡§Æ‡§∞‡§æ‡§†‡•Ä]',\n    flag: 'üáÆüá≥'\n  }, {\n    code: 'ta',\n    name: '[translate:‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç]',\n    flag: 'üáÆüá≥'\n  }];\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      currentLanguage,\n      changeLanguage,\n      t,\n      languages\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"cMCHjbyjwnsHFUd9PeCD7soxopg=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","translations","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","currentLanguage","setCurrentLanguage","saved","localStorage","getItem","changeLanguage","langCode","setItem","t","key","en","languages","code","name","flag","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Map - Copy - Copy/incois-ui/src/contexts/LanguageContext.js"],"sourcesContent":["// src/contexts/LanguageContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport translations from '../translations';\r\n\r\nconst LanguageContext = createContext();\r\n\r\nexport const useLanguage = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (!context) {\r\n    throw new Error('useLanguage must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [currentLanguage, setCurrentLanguage] = useState('en');\r\n  \r\n  // Load saved language from localStorage\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('oceanfront_language');\r\n    if (saved && translations[saved]) {\r\n      setCurrentLanguage(saved);\r\n    }\r\n  }, []);\r\n\r\n  const changeLanguage = (langCode) => {\r\n    if (translations[langCode]) {\r\n      setCurrentLanguage(langCode);\r\n      localStorage.setItem('oceanfront_language', langCode);\r\n    }\r\n  };\r\n\r\n  const t = (key) => {\r\n    return translations[currentLanguage][key] || translations.en[key] || key;\r\n  };\r\n\r\n  const languages = [\r\n    { code: 'en', name: 'English', flag: 'üá∫üá∏' },\r\n    { code: 'hi', name: '[translate:‡§π‡§ø‡§Ç‡§¶‡•Ä]', flag: 'üáÆüá≥' },\r\n    { code: 'mr', name: '[translate:‡§Æ‡§∞‡§æ‡§†‡•Ä]', flag: 'üáÆüá≥' },\r\n    { code: 'ta', name: '[translate:‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç]', flag: 'üáÆüá≥' }\r\n  ];\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{\r\n      currentLanguage,\r\n      changeLanguage,\r\n      t,\r\n      languages\r\n    }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGT,UAAU,CAACM,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC;IACzD,IAAIF,KAAK,IAAIb,YAAY,CAACa,KAAK,CAAC,EAAE;MAChCD,kBAAkB,CAACC,KAAK,CAAC;IAC3B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAIC,QAAQ,IAAK;IACnC,IAAIjB,YAAY,CAACiB,QAAQ,CAAC,EAAE;MAC1BL,kBAAkB,CAACK,QAAQ,CAAC;MAC5BH,YAAY,CAACI,OAAO,CAAC,qBAAqB,EAAED,QAAQ,CAAC;IACvD;EACF,CAAC;EAED,MAAME,CAAC,GAAIC,GAAG,IAAK;IACjB,OAAOpB,YAAY,CAACW,eAAe,CAAC,CAACS,GAAG,CAAC,IAAIpB,YAAY,CAACqB,EAAE,CAACD,GAAG,CAAC,IAAIA,GAAG;EAC1E,CAAC;EAED,MAAME,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAO,CAAC,EAC7C;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,IAAI,EAAE;EAAO,CAAC,EACvD;IAAEF,IAAI,EAAE,IAAI;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,IAAI,EAAE;EAAO,CAAC,CACxD;EAED,oBACEvB,OAAA,CAACC,eAAe,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAC/BhB,eAAe;MACfK,cAAc;MACdG,CAAC;MACDG;IACF,CAAE;IAAAb,QAAA,EACCA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACrB,GAAA,CAvCWF,gBAAgB;AAAAwB,EAAA,GAAhBxB,gBAAgB;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}