{"ast":null,"code":"/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\nimport { isTag, hasChildren, isDocument } from 'domhandler';\nimport * as select from 'cheerio-select';\nimport { domEach, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport { getChildren, getSiblings, nextElementSibling, prevElementSibling, uniqueSort } from 'domutils';\nconst reSiblingSelector = /^\\s*[+~]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find(selectorOrHaystack) {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n  if (typeof selectorOrHaystack !== 'string') {\n    const haystack = isCheerio(selectorOrHaystack) ? selectorOrHaystack.toArray() : [selectorOrHaystack];\n    const context = this.toArray();\n    return this._make(haystack.filter(elem => context.some(node => contains(node, elem))));\n  }\n  return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\n/**\n * Find elements by a specific selector.\n *\n * @private\n * @category Traversing\n * @param selector - Selector to filter by.\n * @param limit - Maximum number of elements to match.\n * @returns The found elements.\n */\nexport function _findBySelector(selector, limit) {\n  var _a;\n  const context = this.toArray();\n  const elems = reSiblingSelector.test(selector) ? context : this.children().toArray();\n  const options = {\n    context,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0],\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode\n  };\n  return this._make(select.select(selector, elems, options, limit));\n}\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting\n * filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher(matchMap) {\n  return function (fn, ...postFns) {\n    return function (selector) {\n      var _a;\n      let matched = matchMap(fn, this);\n      if (selector) {\n        matched = filterArray(matched, selector, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]);\n      }\n      return this._make(\n      // Post processing is only necessary if there is more than one element.\n      this.length > 1 && matched.length > 1 ? postFns.reduce((elems, fn) => fn(elems), matched) : matched);\n    };\n  };\n}\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn, elems) => {\n  let ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value.length > 0) ret = ret.concat(value);\n  }\n  return ret;\n});\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher((fn, elems) => {\n  const ret = [];\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value !== null) {\n      ret.push(value);\n    }\n  }\n  return ret;\n});\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @param nextElem - Function that returns the next element.\n * @param postFns - Post processing functions.\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(nextElem, ...postFns) {\n  // We use a variable here that is used from within the matcher.\n  let matches = null;\n  const innerMatcher = _getMatcher((nextElem, elems) => {\n    const matched = [];\n    domEach(elems, elem => {\n      for (let next; next = nextElem(elem); elem = next) {\n        // FIXME: `matched` might contain duplicates here and the index is too large.\n        if (matches === null || matches === void 0 ? void 0 : matches(next, matched.length)) break;\n        matched.push(next);\n      }\n    });\n    return matched;\n  })(nextElem, ...postFns);\n  return function (selector, filterSelector) {\n    // Override `matches` variable with the new target.\n    matches = typeof selector === 'string' ? elem => select.is(elem, selector, this.options) : selector ? getFilterFn(selector) : null;\n    const ret = innerMatcher.call(this, filterSelector);\n    // Set `matches` to `null`, so we don't waste memory.\n    matches = null;\n    return ret;\n  };\n}\nfunction _removeDuplicates(elems) {\n  return elems.length > 1 ? Array.from(new Set(elems)) : elems;\n}\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent = _singleMatcher(({\n  parent\n}) => parent && !isDocument(parent) ? parent : null, _removeDuplicates);\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents = _matcher(elem => {\n  const matched = [];\n  while (elem.parent && !isDocument(elem.parent)) {\n    matched.push(elem.parent);\n    elem = elem.parent;\n  }\n  return matched;\n}, uniqueSort, elems => elems.reverse());\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil = _matchUntil(({\n  parent\n}) => parent && !isDocument(parent) ? parent : null, uniqueSort, elems => elems.reverse());\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the\n * DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest(selector) {\n  var _a;\n  const set = [];\n  if (!selector) {\n    return this._make(set);\n  }\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]\n  };\n  const selectFn = typeof selector === 'string' ? elem => select.is(elem, selector, selectOpts) : getFilterFn(selector);\n  domEach(this, elem => {\n    if (elem && !isDocument(elem) && !isTag(elem)) {\n      elem = elem.parent;\n    }\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        // Do not add duplicate elements to the set\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n        break;\n      }\n      elem = elem.parent;\n    }\n  });\n  return this._make(set);\n}\n/**\n * Gets the next sibling of each selected element, optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next = _singleMatcher(elem => nextElementSibling(elem));\n/**\n * Gets all the following siblings of the each selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll = _matcher(elem => {\n  const matched = [];\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil = _matchUntil(el => nextElementSibling(el), _removeDuplicates);\n/**\n * Gets the previous sibling of each selected element optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev = _singleMatcher(elem => prevElementSibling(elem));\n/**\n * Gets all the preceding siblings of each selected element, optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll = _matcher(elem => {\n  const matched = [];\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil = _matchUntil(el => prevElementSibling(el), _removeDuplicates);\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings = _matcher(elem => getSiblings(elem).filter(el => isTag(el) && el !== elem), uniqueSort);\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children = _matcher(elem => getChildren(elem).filter(isTag), _removeDuplicates);\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents() {\n  const elems = this.toArray().reduce((newElems, elem) => hasChildren(elem) ? newElems.concat(elem.children) : newElems, []);\n  return this._make(elems);\n}\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each(fn) {\n  let i = 0;\n  const len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n}\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map(fn) {\n  let elems = [];\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n}\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return (el, i) => match.call(el, i, el);\n  }\n  if (isCheerio(match)) {\n    return el => Array.prototype.includes.call(match, el);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\nexport function filter(match) {\n  var _a;\n  return this._make(filterArray(this.toArray(), match, this.options.xmlMode, (_a = this._root) === null || _a === void 0 ? void 0 : _a[0]));\n}\nexport function filterArray(nodes, match, xmlMode, root) {\n  return typeof match === 'string' ? select.filter(match, nodes, {\n    xmlMode,\n    root\n  }) : nodes.filter(getFilterFn(match));\n}\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Traversing\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is(selector) {\n  const nodes = this.toArray();\n  return typeof selector === 'string' ? select.some(nodes.filter(isTag), selector, this.options) : selector ? nodes.some(getFilterFn(selector)) : false;\n}\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not(match) {\n  let nodes = this.toArray();\n  if (typeof match === 'string') {\n    const matches = new Set(select.filter(match, nodes, this.options));\n    nodes = nodes.filter(el => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n  return this._make(nodes);\n}\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(selectorOrHaystack) {\n  return this.filter(typeof selectorOrHaystack === 'string' ?\n  // Using the `:has` selector here short-circuits searches.\n  `:has(${selectorOrHaystack})` : (_, el) => this._make(el).find(selectorOrHaystack).length > 0);\n}\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first() {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last() {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq(i) {\n  var _a;\n  i = +i;\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this._make((_a = this[i]) !== null && _a !== void 0 ? _a : []);\n}\nexport function get(i) {\n  if (i == null) {\n    return this.toArray();\n  }\n  return this[i < 0 ? this.length + i : i];\n}\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray() {\n  return Array.prototype.slice.call(this);\n}\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index(selectorOrNeedle) {\n  let $haystack;\n  let needle;\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, unicorn/no-this-assignment\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle) ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n  return Array.prototype.indexOf.call($haystack, needle);\n}\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice(start, end) {\n  return this._make(Array.prototype.slice.call(this, start, end));\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end() {\n  var _a;\n  return (_a = this.prevObject) !== null && _a !== void 0 ? _a : this._make([]);\n}\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add(other, context) {\n  const selection = this._make(other, context);\n  const contents = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents);\n}\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack(selector) {\n  return this.prevObject ? this.add(selector ? this.prevObject.filter(selector) : this.prevObject) : this;\n}","map":{"version":3,"names":["isTag","hasChildren","isDocument","select","domEach","isCheerio","contains","getChildren","getSiblings","nextElementSibling","prevElementSibling","uniqueSort","reSiblingSelector","find","selectorOrHaystack","_make","haystack","toArray","context","filter","elem","some","node","_findBySelector","Number","POSITIVE_INFINITY","selector","limit","elems","test","children","options","root","_a","_root","xmlMode","lowerCaseTags","lowerCaseAttributeNames","pseudos","quirksMode","_getMatcher","matchMap","fn","postFns","matched","filterArray","length","reduce","_matcher","ret","i","value","concat","_singleMatcher","push","_matchUntil","nextElem","matches","innerMatcher","next","filterSelector","is","getFilterFn","call","_removeDuplicates","Array","from","Set","parent","parents","reverse","parentsUntil","closest","set","selectOpts","selectFn","includes","nextAll","nextUntil","el","prev","prevAll","prevUntil","siblings","contents","newElems","each","len","map","val","match","prototype","nodes","not","has","filterFn","_","first","last","eq","get","slice","index","selectorOrNeedle","$haystack","needle","indexOf","start","end","prevObject","add","other","selection","addBack"],"sources":["D:\\Map\\node_modules\\cheerio\\src\\api\\traversing.ts"],"sourcesContent":["/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\n\nimport {\n  isTag,\n  type AnyNode,\n  type Element,\n  hasChildren,\n  isDocument,\n  type Document,\n} from 'domhandler';\nimport type { Cheerio } from '../cheerio.js';\nimport * as select from 'cheerio-select';\nimport { domEach, isCheerio } from '../utils.js';\nimport { contains } from '../static.js';\nimport {\n  getChildren,\n  getSiblings,\n  nextElementSibling,\n  prevElementSibling,\n  uniqueSort,\n} from 'domutils';\nimport type { FilterFunction, AcceptedFilters } from '../types.js';\nconst reSiblingSelector = /^\\s*[+~]/;\n\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').find('li').length;\n * //=> 3\n * $('#fruits').find($('.apple')).length;\n * //=> 1\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexport function find<T extends AnyNode>(\n  this: Cheerio<T>,\n  selectorOrHaystack?: string | Cheerio<Element> | Element,\n): Cheerio<Element> {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n\n  if (typeof selectorOrHaystack !== 'string') {\n    const haystack = isCheerio(selectorOrHaystack)\n      ? selectorOrHaystack.toArray()\n      : [selectorOrHaystack];\n\n    const context = this.toArray();\n\n    return this._make(\n      haystack.filter((elem) => context.some((node) => contains(node, elem))),\n    );\n  }\n\n  return this._findBySelector(selectorOrHaystack, Number.POSITIVE_INFINITY);\n}\n\n/**\n * Find elements by a specific selector.\n *\n * @private\n * @category Traversing\n * @param selector - Selector to filter by.\n * @param limit - Maximum number of elements to match.\n * @returns The found elements.\n */\nexport function _findBySelector<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector: string,\n  limit: number,\n): Cheerio<Element> {\n  const context = this.toArray();\n\n  const elems = reSiblingSelector.test(selector)\n    ? context\n    : this.children().toArray();\n\n  const options = {\n    context,\n    root: this._root?.[0],\n\n    // Pass options that are recognized by `cheerio-select`\n    xmlMode: this.options.xmlMode,\n    lowerCaseTags: this.options.lowerCaseTags,\n    lowerCaseAttributeNames: this.options.lowerCaseAttributeNames,\n    pseudos: this.options.pseudos,\n    quirksMode: this.options.quirksMode,\n  };\n\n  return this._make(select.select(selector, elems, options, limit));\n}\n\n/**\n * Creates a matcher, using a particular mapping function. Matchers provide a\n * function that finds elements using a generating function, supporting\n * filtering.\n *\n * @private\n * @param matchMap - Mapping function.\n * @returns - Function for wrapping generating functions.\n */\nfunction _getMatcher<P>(\n  matchMap: (fn: (elem: AnyNode) => P, elems: Cheerio<AnyNode>) => Element[],\n) {\n  return function (\n    fn: (elem: AnyNode) => P,\n    ...postFns: ((elems: Element[]) => Element[])[]\n  ) {\n    return function <T extends AnyNode>(\n      this: Cheerio<T>,\n      selector?: AcceptedFilters<Element>,\n    ): Cheerio<Element> {\n      let matched: Element[] = matchMap(fn, this);\n\n      if (selector) {\n        matched = filterArray(\n          matched,\n          selector,\n          this.options.xmlMode,\n          this._root?.[0],\n        );\n      }\n\n      return this._make(\n        // Post processing is only necessary if there is more than one element.\n        this.length > 1 && matched.length > 1\n          ? postFns.reduce((elems, fn) => fn(elems), matched)\n          : matched,\n      );\n    };\n  };\n}\n\n/** Matcher that adds multiple elements for each entry in the input. */\nconst _matcher = _getMatcher((fn: (elem: AnyNode) => Element[], elems) => {\n  let ret: Element[] = [];\n\n  for (let i = 0; i < elems.length; i++) {\n    const value = fn(elems[i]);\n    if (value.length > 0) ret = ret.concat(value);\n  }\n\n  return ret;\n});\n\n/** Matcher that adds at most one element for each entry in the input. */\nconst _singleMatcher = _getMatcher(\n  (fn: (elem: AnyNode) => Element | null, elems) => {\n    const ret: Element[] = [];\n\n    for (let i = 0; i < elems.length; i++) {\n      const value = fn(elems[i]);\n      if (value !== null) {\n        ret.push(value);\n      }\n    }\n    return ret;\n  },\n);\n\n/**\n * Matcher that supports traversing until a condition is met.\n *\n * @param nextElem - Function that returns the next element.\n * @param postFns - Post processing functions.\n * @returns A function usable for `*Until` methods.\n */\nfunction _matchUntil(\n  nextElem: (elem: AnyNode) => Element | null,\n  ...postFns: ((elems: Element[]) => Element[])[]\n) {\n  // We use a variable here that is used from within the matcher.\n  let matches: ((el: Element, i: number) => boolean) | null = null;\n\n  const innerMatcher = _getMatcher(\n    (nextElem: (elem: AnyNode) => Element | null, elems) => {\n      const matched: Element[] = [];\n\n      domEach(elems, (elem) => {\n        for (let next; (next = nextElem(elem)); elem = next) {\n          // FIXME: `matched` might contain duplicates here and the index is too large.\n          if (matches?.(next, matched.length)) break;\n          matched.push(next);\n        }\n      });\n\n      return matched;\n    },\n  )(nextElem, ...postFns);\n\n  return function <T extends AnyNode>(\n    this: Cheerio<T>,\n    selector?: AcceptedFilters<Element> | null,\n    filterSelector?: AcceptedFilters<Element>,\n  ): Cheerio<Element> {\n    // Override `matches` variable with the new target.\n    matches =\n      typeof selector === 'string'\n        ? (elem: Element) => select.is(elem, selector, this.options)\n        : selector\n          ? getFilterFn(selector)\n          : null;\n\n    const ret = innerMatcher.call(this, filterSelector);\n\n    // Set `matches` to `null`, so we don't waste memory.\n    matches = null;\n\n    return ret;\n  };\n}\n\nfunction _removeDuplicates<T extends AnyNode>(elems: T[]): T[] {\n  return elems.length > 1 ? Array.from(new Set<T>(elems)) : elems;\n}\n\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').parent().attr('id');\n * //=> fruits\n * ```\n *\n * @param selector - If specified filter for parent.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexport const parent: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _singleMatcher(\n  ({ parent }) => (parent && !isDocument(parent) ? (parent as Element) : null),\n  _removeDuplicates,\n);\n\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parents().length;\n * //=> 2\n * $('.orange').parents('#fruits').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexport const parents: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher(\n  (elem) => {\n    const matched = [];\n    while (elem.parent && !isDocument(elem.parent)) {\n      matched.push(elem.parent as Element);\n      elem = elem.parent;\n    }\n    return matched;\n  },\n  uniqueSort,\n  (elems) => elems.reverse(),\n);\n\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or\n * cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').parentsUntil('#food').length;\n * //=> 1\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - Optional filter for parents.\n * @returns The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexport const parentsUntil: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element> | null,\n  filterSelector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matchUntil(\n  ({ parent }) => (parent && !isDocument(parent) ? (parent as Element) : null),\n  uniqueSort,\n  (elems) => elems.reverse(),\n);\n\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the\n * DOM tree.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').closest();\n * //=> []\n *\n * $('.orange').closest('.apple');\n * // => []\n *\n * $('.orange').closest('li');\n * //=> [<li class=\"orange\">Orange</li>]\n *\n * $('.orange').closest('#fruits');\n * //=> [<ul id=\"fruits\"> ... </ul>]\n * ```\n *\n * @param selector - Selector for the element to find.\n * @returns The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexport function closest<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n): Cheerio<AnyNode> {\n  const set: AnyNode[] = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  const selectOpts = {\n    xmlMode: this.options.xmlMode,\n    root: this._root?.[0],\n  };\n\n  const selectFn =\n    typeof selector === 'string'\n      ? (elem: Element) => select.is(elem, selector, selectOpts)\n      : getFilterFn(selector);\n\n  domEach(this, (elem: AnyNode | null) => {\n    if (elem && !isDocument(elem) && !isTag(elem)) {\n      elem = elem.parent;\n    }\n    while (elem && isTag(elem)) {\n      if (selectFn(elem, 0)) {\n        // Do not add duplicate elements to the set\n        if (!set.includes(elem)) {\n          set.push(elem);\n        }\n        break;\n      }\n      elem = elem.parent;\n    }\n  });\n\n  return this._make(set);\n}\n\n/**\n * Gets the next sibling of each selected element, optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').next().hasClass('orange');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for sibling.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexport const next: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _singleMatcher((elem) => nextElementSibling(elem));\n\n/**\n * Gets all the following siblings of the each selected element, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n * $('.apple').nextAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexport const nextAll: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher((elem) => {\n  const matched = [];\n  while (elem.next) {\n    elem = elem.next;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').nextUntil('.pear');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexport const nextUntil: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element> | null,\n  filterSelector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matchUntil(\n  (el) => nextElementSibling(el),\n  _removeDuplicates,\n);\n\n/**\n * Gets the previous sibling of each selected element optionally filtered by a\n * selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.orange').prev().hasClass('apple');\n * //=> true\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexport const prev: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _singleMatcher((elem) => prevElementSibling(elem));\n\n/**\n * Gets all the preceding siblings of each selected element, optionally filtered\n * by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevAll();\n * //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *\n * $('.pear').prevAll('.orange');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexport const prevAll: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher((elem) => {\n  const matched = [];\n  while (elem.prev) {\n    elem = elem.prev;\n    if (isTag(elem)) matched.push(elem);\n  }\n  return matched;\n}, _removeDuplicates);\n\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').prevUntil('.apple');\n * //=> [<li class=\"orange\">Orange</li>]\n * ```\n *\n * @param selector - Selector for element to stop at.\n * @param filterSelector - If specified filter for siblings.\n * @returns The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexport const prevUntil: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element> | null,\n  filterSelector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matchUntil(\n  (el) => prevElementSibling(el),\n  _removeDuplicates,\n);\n\n/**\n * Get the siblings of each element (excluding the element) in the set of\n * matched elements, optionally filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').siblings().length;\n * //=> 2\n *\n * $('.pear').siblings('.orange').length;\n * //=> 1\n * ```\n *\n * @param selector - If specified filter for siblings.\n * @returns The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexport const siblings: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher(\n  (elem) =>\n    getSiblings(elem).filter((el): el is Element => isTag(el) && el !== elem),\n  uniqueSort,\n);\n\n/**\n * Gets the element children of each element in the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().length;\n * //=> 3\n *\n * $('#fruits').children('.pear').text();\n * //=> Pear\n * ```\n *\n * @param selector - If specified filter for children.\n * @returns The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexport const children: <T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<Element>,\n) => Cheerio<Element> = _matcher(\n  (elem) => getChildren(elem).filter(isTag),\n  _removeDuplicates,\n);\n\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').contents().length;\n * //=> 3\n * ```\n *\n * @returns The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexport function contents<T extends AnyNode>(\n  this: Cheerio<T>,\n): Cheerio<AnyNode> {\n  const elems = this.toArray().reduce<AnyNode[]>(\n    (newElems, elem) =>\n      hasChildren(elem) ? newElems.concat(elem.children) : newElems,\n    [],\n  );\n  return this._make(elems);\n}\n\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * const fruits = [];\n *\n * $('li').each(function (i, elem) {\n *   fruits[i] = $(this).text();\n * });\n *\n * fruits.join(', ');\n * //=> Apple, Orange, Pear\n * ```\n *\n * @param fn - Function to execute.\n * @returns The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexport function each<T>(\n  this: Cheerio<T>,\n  fn: (this: T, i: number, el: T) => void | boolean,\n): Cheerio<T> {\n  let i = 0;\n  const len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n}\n\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li')\n *   .map(function (i, el) {\n *     // this === el\n *     return $(this).text();\n *   })\n *   .toArray()\n *   .join(' ');\n * //=> \"apple orange pear\"\n * ```\n *\n * @param fn - Function to execute.\n * @returns The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexport function map<T, M>(\n  this: Cheerio<T>,\n  fn: (this: T, i: number, el: T) => M[] | M | null | undefined,\n): Cheerio<M> {\n  let elems: M[] = [];\n  for (let i = 0; i < this.length; i++) {\n    const el = this[i];\n    const val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n}\n\n/**\n * Creates a function to test if a filter is matched.\n *\n * @param match - A filter.\n * @returns A function that determines if a filter has been matched.\n */\nfunction getFilterFn<T>(\n  match: FilterFunction<T> | Cheerio<T> | T,\n): (el: T, i: number) => boolean {\n  if (typeof match === 'function') {\n    return (el, i) => (match as FilterFunction<T>).call(el, i, el);\n  }\n  if (isCheerio<T>(match)) {\n    return (el) => Array.prototype.includes.call(match, el);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\n\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test.\n *\n * This is the definition for using type guards; have a look below for other\n * ways to invoke this method. The function is executed in the context of the\n * selected element, so `this` refers to the current element.\n *\n * @category Traversing\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li')\n *   .filter(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   })\n *   .attr('class'); //=> orange\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\nexport function filter<T, S extends T>(\n  this: Cheerio<T>,\n  match: (this: T, index: number, value: T) => value is S,\n): Cheerio<S>;\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test.\n *\n * - When a Cheerio selection is specified, return only the elements contained in\n *   that selection.\n * - When an element is specified, return only that element (if it is contained in\n *   the original selection).\n * - If using the function method, the function is executed in the context of the\n *   selected element, so `this` refers to the current element.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').filter('.orange').attr('class');\n * //=> orange\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li')\n *   .filter(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   })\n *   .attr('class'); //=> orange\n * ```\n *\n * @param match - Value to look for, following the rules above. See\n *   {@link AcceptedFilters}.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\nexport function filter<T, S extends AcceptedFilters<T>>(\n  this: Cheerio<T>,\n  match: S,\n): Cheerio<S extends string ? Element : T>;\nexport function filter<T>(\n  this: Cheerio<T>,\n  match: AcceptedFilters<T>,\n): Cheerio<unknown> {\n  return this._make<unknown>(\n    filterArray(this.toArray(), match, this.options.xmlMode, this._root?.[0]),\n  );\n}\n\nexport function filterArray<T>(\n  nodes: T[],\n  match: AcceptedFilters<T>,\n  xmlMode?: boolean,\n  root?: Document,\n): Element[] | T[] {\n  return typeof match === 'string'\n    ? select.filter(match, nodes as unknown as AnyNode[], { xmlMode, root })\n    : nodes.filter(getFilterFn<T>(match));\n}\n\n/**\n * Checks the current list of elements and returns `true` if _any_ of the\n * elements match the selector. If using an element or Cheerio selection,\n * returns `true` if _any_ of the elements match. If using a predicate function,\n * the function is executed in the context of the selected element, so `this`\n * refers to the current element.\n *\n * @category Traversing\n * @param selector - Selector for the selection.\n * @returns Whether or not the selector matches an element of the instance.\n * @see {@link https://api.jquery.com/is/}\n */\nexport function is<T>(\n  this: Cheerio<T>,\n  selector?: AcceptedFilters<T>,\n): boolean {\n  const nodes = this.toArray();\n  return typeof selector === 'string'\n    ? select.some(\n        (nodes as unknown as AnyNode[]).filter(isTag),\n        selector,\n        this.options,\n      )\n    : selector\n      ? nodes.some(getFilterFn<T>(selector))\n      : false;\n}\n\n/**\n * Remove elements from the set of matched elements. Given a Cheerio object that\n * represents a set of DOM elements, the `.not()` method constructs a new\n * Cheerio object from a subset of the matching elements. The supplied selector\n * is tested against each element; the elements that don't match the selector\n * will be included in the result.\n *\n * The `.not()` method can take a function as its argument in the same way that\n * `.filter()` does. Elements for which the function returns `true` are excluded\n * from the filtered set; all other elements are included.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('li').not('.apple').length;\n * //=> 2\n * ```\n *\n * @example <caption>Function</caption>\n *\n * ```js\n * $('li').not(function (i, el) {\n *   // this === el\n *   return $(this).attr('class') === 'orange';\n * }).length; //=> 2\n * ```\n *\n * @param match - Value to look for, following the rules above.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexport function not<T extends AnyNode>(\n  this: Cheerio<T>,\n  match: AcceptedFilters<T>,\n): Cheerio<T> {\n  let nodes = this.toArray();\n\n  if (typeof match === 'string') {\n    const matches = new Set<AnyNode>(select.filter(match, nodes, this.options));\n    nodes = nodes.filter((el) => !matches.has(el));\n  } else {\n    const filterFn = getFilterFn(match);\n    nodes = nodes.filter((el, i) => !filterFn(el, i));\n  }\n\n  return this._make(nodes);\n}\n\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @category Traversing\n * @example <caption>Selector</caption>\n *\n * ```js\n * $('ul').has('.pear').attr('id');\n * //=> fruits\n * ```\n *\n * @example <caption>Element</caption>\n *\n * ```js\n * $('ul').has($('.pear')[0]).attr('id');\n * //=> fruits\n * ```\n *\n * @param selectorOrHaystack - Element to look for.\n * @returns The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexport function has(\n  this: Cheerio<AnyNode | Element>,\n  selectorOrHaystack: string | Cheerio<Element> | Element,\n): Cheerio<AnyNode | Element> {\n  return this.filter(\n    typeof selectorOrHaystack === 'string'\n      ? // Using the `:has` selector here short-circuits searches.\n        `:has(${selectorOrHaystack})`\n      : (_, el) => this._make(el).find(selectorOrHaystack).length > 0,\n  );\n}\n\n/**\n * Will select the first element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().first().text();\n * //=> Apple\n * ```\n *\n * @returns The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexport function first<T extends AnyNode>(this: Cheerio<T>): Cheerio<T> {\n  return this.length > 1 ? this._make(this[0]) : this;\n}\n\n/**\n * Will select the last element of a cheerio object.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('#fruits').children().last().text();\n * //=> Pear\n * ```\n *\n * @returns The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexport function last<T>(this: Cheerio<T>): Cheerio<T> {\n  return this.length > 0 ? this._make(this[this.length - 1]) : this;\n}\n\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).text();\n * //=> Apple\n *\n * $('li').eq(-1).text();\n * //=> Pear\n * ```\n *\n * @param i - Index of the element to select.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexport function eq<T>(this: Cheerio<T>, i: number): Cheerio<T> {\n  i = +i;\n\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n\n  if (i < 0) i = this.length + i;\n  return this._make(this[i] ?? []);\n}\n\n/**\n * Retrieve one of the elements matched by the Cheerio object, at the `i`th\n * position.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').get(0).tagName;\n * //=> li\n * ```\n *\n * @param i - Element to retrieve.\n * @returns The element at the `i`th position.\n * @see {@link https://api.jquery.com/get/}\n */\nexport function get<T>(this: Cheerio<T>, i: number): T | undefined;\n/**\n * Retrieve all elements matched by the Cheerio object, as an array.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').get().length;\n * //=> 3\n * ```\n *\n * @returns All elements matched by the Cheerio object.\n * @see {@link https://api.jquery.com/get/}\n */\nexport function get<T>(this: Cheerio<T>): T[];\nexport function get<T>(this: Cheerio<T>, i?: number): T | T[] {\n  if (i == null) {\n    return this.toArray();\n  }\n  return this[i < 0 ? this.length + i : i];\n}\n\n/**\n * Retrieve all the DOM elements contained in the jQuery set as an array.\n *\n * @example\n *\n * ```js\n * $('li').toArray();\n * //=> [ {...}, {...}, {...} ]\n * ```\n *\n * @returns The contained items.\n */\nexport function toArray<T>(this: Cheerio<T>): T[] {\n  return (Array.prototype as T[]).slice.call(this);\n}\n\n/**\n * Search for a given element from among the matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.pear').index();\n * //=> 2 $('.orange').index('li');\n * //=> 1\n * $('.apple').index($('#fruit, li'));\n * //=> 1\n * ```\n *\n * @param selectorOrNeedle - Element to look for.\n * @returns The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexport function index<T extends AnyNode>(\n  this: Cheerio<T>,\n  selectorOrNeedle?: string | Cheerio<AnyNode> | AnyNode,\n): number {\n  let $haystack: Cheerio<AnyNode>;\n  let needle: AnyNode;\n\n  if (selectorOrNeedle == null) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make<AnyNode>(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias, unicorn/no-this-assignment\n    $haystack = this;\n    needle = isCheerio(selectorOrNeedle)\n      ? selectorOrNeedle[0]\n      : selectorOrNeedle;\n  }\n\n  return Array.prototype.indexOf.call($haystack, needle);\n}\n\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').slice(1).eq(0).text();\n * //=> 'Orange'\n *\n * $('li').slice(1, 2).length;\n * //=> 1\n * ```\n *\n * @param start - A position at which the elements begin to be selected. If\n *   negative, it indicates an offset from the end of the set.\n * @param end - A position at which the elements stop being selected. If\n *   negative, it indicates an offset from the end of the set. If omitted, the\n *   range continues until the end of the set.\n * @returns The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexport function slice<T>(\n  this: Cheerio<T>,\n  start?: number,\n  end?: number,\n): Cheerio<T> {\n  return this._make<T>(Array.prototype.slice.call(this, start, end));\n}\n\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).end().length;\n * //=> 3\n * ```\n *\n * @returns The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexport function end<T>(this: Cheerio<T>): Cheerio<AnyNode> {\n  return (this.prevObject as Cheerio<AnyNode> | null) ?? this._make([]);\n}\n\n/**\n * Add elements to the set of matched elements.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('.apple').add('.orange').length;\n * //=> 2\n * ```\n *\n * @param other - Elements to add.\n * @param context - Optionally the context of the new selection.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexport function add<S extends AnyNode, T extends AnyNode>(\n  this: Cheerio<T>,\n  other: string | Cheerio<S> | S | S[],\n  context?: Cheerio<S> | string,\n): Cheerio<S | T> {\n  const selection = this._make(other, context);\n  const contents = uniqueSort([...this.get(), ...selection.get()]);\n  return this._make(contents);\n}\n\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @category Traversing\n * @example\n *\n * ```js\n * $('li').eq(0).addBack('.orange').length;\n * //=> 2\n * ```\n *\n * @param selector - Selector for the elements to add.\n * @returns The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexport function addBack<T extends AnyNode>(\n  this: Cheerio<T>,\n  selector?: string,\n): Cheerio<AnyNode> {\n  return this.prevObject\n    ? this.add<AnyNode, T>(\n        selector ? this.prevObject.filter(selector) : this.prevObject,\n      )\n    : this;\n}\n"],"mappings":"AAAA;;;;;AAMA,SACEA,KAAK,EAGLC,WAAW,EACXC,UAAU,QAEL,YAAY;AAEnB,OAAO,KAAKC,MAAM,MAAM,gBAAgB;AACxC,SAASC,OAAO,EAAEC,SAAS,QAAQ,aAAa;AAChD,SAASC,QAAQ,QAAQ,cAAc;AACvC,SACEC,WAAW,EACXC,WAAW,EACXC,kBAAkB,EAClBC,kBAAkB,EAClBC,UAAU,QACL,UAAU;AAEjB,MAAMC,iBAAiB,GAAG,UAAU;AAEpC;;;;;;;;;;;;;;;;;;AAkBA,OAAM,SAAUC,IAAIA,CAElBC,kBAAwD;EAExD,IAAI,CAACA,kBAAkB,EAAE;IACvB,OAAO,IAAI,CAACC,KAAK,CAAC,EAAE,CAAC;EACvB;EAEA,IAAI,OAAOD,kBAAkB,KAAK,QAAQ,EAAE;IAC1C,MAAME,QAAQ,GAAGX,SAAS,CAACS,kBAAkB,CAAC,GAC1CA,kBAAkB,CAACG,OAAO,EAAE,GAC5B,CAACH,kBAAkB,CAAC;IAExB,MAAMI,OAAO,GAAG,IAAI,CAACD,OAAO,EAAE;IAE9B,OAAO,IAAI,CAACF,KAAK,CACfC,QAAQ,CAACG,MAAM,CAAEC,IAAI,IAAKF,OAAO,CAACG,IAAI,CAAEC,IAAI,IAAKhB,QAAQ,CAACgB,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC,CACxE;EACH;EAEA,OAAO,IAAI,CAACG,eAAe,CAACT,kBAAkB,EAAEU,MAAM,CAACC,iBAAiB,CAAC;AAC3E;AAEA;;;;;;;;;AASA,OAAM,SAAUF,eAAeA,CAE7BG,QAAgB,EAChBC,KAAa;;EAEb,MAAMT,OAAO,GAAG,IAAI,CAACD,OAAO,EAAE;EAE9B,MAAMW,KAAK,GAAGhB,iBAAiB,CAACiB,IAAI,CAACH,QAAQ,CAAC,GAC1CR,OAAO,GACP,IAAI,CAACY,QAAQ,EAAE,CAACb,OAAO,EAAE;EAE7B,MAAMc,OAAO,GAAG;IACdb,OAAO;IACPc,IAAI,EAAE,CAAAC,EAAA,OAAI,CAACC,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAG,CAAC,CAAC;IAErB;IACAE,OAAO,EAAE,IAAI,CAACJ,OAAO,CAACI,OAAO;IAC7BC,aAAa,EAAE,IAAI,CAACL,OAAO,CAACK,aAAa;IACzCC,uBAAuB,EAAE,IAAI,CAACN,OAAO,CAACM,uBAAuB;IAC7DC,OAAO,EAAE,IAAI,CAACP,OAAO,CAACO,OAAO;IAC7BC,UAAU,EAAE,IAAI,CAACR,OAAO,CAACQ;GAC1B;EAED,OAAO,IAAI,CAACxB,KAAK,CAACZ,MAAM,CAACA,MAAM,CAACuB,QAAQ,EAAEE,KAAK,EAAEG,OAAO,EAAEJ,KAAK,CAAC,CAAC;AACnE;AAEA;;;;;;;;;AASA,SAASa,WAAWA,CAClBC,QAA0E;EAE1E,OAAO,UACLC,EAAwB,EACxB,GAAGC,OAA4C;IAE/C,OAAO,UAELjB,QAAmC;;MAEnC,IAAIkB,OAAO,GAAcH,QAAQ,CAACC,EAAE,EAAE,IAAI,CAAC;MAE3C,IAAIhB,QAAQ,EAAE;QACZkB,OAAO,GAAGC,WAAW,CACnBD,OAAO,EACPlB,QAAQ,EACR,IAAI,CAACK,OAAO,CAACI,OAAO,EACpB,CAAAF,EAAA,OAAI,CAACC,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAG,CAAC,CAAC,CAChB;MACH;MAEA,OAAO,IAAI,CAAClB,KAAK;MACf;MACA,IAAI,CAAC+B,MAAM,GAAG,CAAC,IAAIF,OAAO,CAACE,MAAM,GAAG,CAAC,GACjCH,OAAO,CAACI,MAAM,CAAC,CAACnB,KAAK,EAAEc,EAAE,KAAKA,EAAE,CAACd,KAAK,CAAC,EAAEgB,OAAO,CAAC,GACjDA,OAAO,CACZ;IACH,CAAC;EACH,CAAC;AACH;AAEA;AACA,MAAMI,QAAQ,GAAGR,WAAW,CAAC,CAACE,EAAgC,EAAEd,KAAK,KAAI;EACvE,IAAIqB,GAAG,GAAc,EAAE;EAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,KAAK,CAACkB,MAAM,EAAEI,CAAC,EAAE,EAAE;IACrC,MAAMC,KAAK,GAAGT,EAAE,CAACd,KAAK,CAACsB,CAAC,CAAC,CAAC;IAC1B,IAAIC,KAAK,CAACL,MAAM,GAAG,CAAC,EAAEG,GAAG,GAAGA,GAAG,CAACG,MAAM,CAACD,KAAK,CAAC;EAC/C;EAEA,OAAOF,GAAG;AACZ,CAAC,CAAC;AAEF;AACA,MAAMI,cAAc,GAAGb,WAAW,CAChC,CAACE,EAAqC,EAAEd,KAAK,KAAI;EAC/C,MAAMqB,GAAG,GAAc,EAAE;EAEzB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGtB,KAAK,CAACkB,MAAM,EAAEI,CAAC,EAAE,EAAE;IACrC,MAAMC,KAAK,GAAGT,EAAE,CAACd,KAAK,CAACsB,CAAC,CAAC,CAAC;IAC1B,IAAIC,KAAK,KAAK,IAAI,EAAE;MAClBF,GAAG,CAACK,IAAI,CAACH,KAAK,CAAC;IACjB;EACF;EACA,OAAOF,GAAG;AACZ,CAAC,CACF;AAED;;;;;;;AAOA,SAASM,WAAWA,CAClBC,QAA2C,EAC3C,GAAGb,OAA4C;EAE/C;EACA,IAAIc,OAAO,GAAiD,IAAI;EAEhE,MAAMC,YAAY,GAAGlB,WAAW,CAC9B,CAACgB,QAA2C,EAAE5B,KAAK,KAAI;IACrD,MAAMgB,OAAO,GAAc,EAAE;IAE7BxC,OAAO,CAACwB,KAAK,EAAGR,IAAI,IAAI;MACtB,KAAK,IAAIuC,IAAI,EAAGA,IAAI,GAAGH,QAAQ,CAACpC,IAAI,CAAC,EAAGA,IAAI,GAAGuC,IAAI,EAAE;QACnD;QACA,IAAIF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGE,IAAI,EAAEf,OAAO,CAACE,MAAM,CAAC,EAAE;QACrCF,OAAO,CAACU,IAAI,CAACK,IAAI,CAAC;MACpB;IACF,CAAC,CAAC;IAEF,OAAOf,OAAO;EAChB,CAAC,CACF,CAACY,QAAQ,EAAE,GAAGb,OAAO,CAAC;EAEvB,OAAO,UAELjB,QAA0C,EAC1CkC,cAAyC;IAEzC;IACAH,OAAO,GACL,OAAO/B,QAAQ,KAAK,QAAQ,GACvBN,IAAa,IAAKjB,MAAM,CAAC0D,EAAE,CAACzC,IAAI,EAAEM,QAAQ,EAAE,IAAI,CAACK,OAAO,CAAC,GAC1DL,QAAQ,GACNoC,WAAW,CAACpC,QAAQ,CAAC,GACrB,IAAI;IAEZ,MAAMuB,GAAG,GAAGS,YAAY,CAACK,IAAI,CAAC,IAAI,EAAEH,cAAc,CAAC;IAEnD;IACAH,OAAO,GAAG,IAAI;IAEd,OAAOR,GAAG;EACZ,CAAC;AACH;AAEA,SAASe,iBAAiBA,CAAoBpC,KAAU;EACtD,OAAOA,KAAK,CAACkB,MAAM,GAAG,CAAC,GAAGmB,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAIvC,KAAK,CAAC,CAAC,GAAGA,KAAK;AACjE;AAEA;;;;;;;;;;;;;;;;AAgBA,OAAO,MAAMwC,MAAM,GAGKf,cAAc,CACpC,CAAC;EAAEe;AAAM,CAAE,KAAMA,MAAM,IAAI,CAAClE,UAAU,CAACkE,MAAM,CAAC,GAAIA,MAAkB,GAAG,IAAK,EAC5EJ,iBAAiB,CAClB;AAED;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMK,OAAO,GAGIrB,QAAQ,CAC7B5B,IAAI,IAAI;EACP,MAAMwB,OAAO,GAAG,EAAE;EAClB,OAAOxB,IAAI,CAACgD,MAAM,IAAI,CAAClE,UAAU,CAACkB,IAAI,CAACgD,MAAM,CAAC,EAAE;IAC9CxB,OAAO,CAACU,IAAI,CAAClC,IAAI,CAACgD,MAAiB,CAAC;IACpChD,IAAI,GAAGA,IAAI,CAACgD,MAAM;EACpB;EACA,OAAOxB,OAAO;AAChB,CAAC,EACDjC,UAAU,EACTiB,KAAK,IAAKA,KAAK,CAAC0C,OAAO,EAAE,CAC3B;AAED;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMC,YAAY,GAIDhB,WAAW,CACjC,CAAC;EAAEa;AAAM,CAAE,KAAMA,MAAM,IAAI,CAAClE,UAAU,CAACkE,MAAM,CAAC,GAAIA,MAAkB,GAAG,IAAK,EAC5EzD,UAAU,EACTiB,KAAK,IAAKA,KAAK,CAAC0C,OAAO,EAAE,CAC3B;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAM,SAAUE,OAAOA,CAErB9C,QAAmC;;EAEnC,MAAM+C,GAAG,GAAc,EAAE;EAEzB,IAAI,CAAC/C,QAAQ,EAAE;IACb,OAAO,IAAI,CAACX,KAAK,CAAC0D,GAAG,CAAC;EACxB;EAEA,MAAMC,UAAU,GAAG;IACjBvC,OAAO,EAAE,IAAI,CAACJ,OAAO,CAACI,OAAO;IAC7BH,IAAI,EAAE,CAAAC,EAAA,OAAI,CAACC,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAG,CAAC;GACrB;EAED,MAAM0C,QAAQ,GACZ,OAAOjD,QAAQ,KAAK,QAAQ,GACvBN,IAAa,IAAKjB,MAAM,CAAC0D,EAAE,CAACzC,IAAI,EAAEM,QAAQ,EAAEgD,UAAU,CAAC,GACxDZ,WAAW,CAACpC,QAAQ,CAAC;EAE3BtB,OAAO,CAAC,IAAI,EAAGgB,IAAoB,IAAI;IACrC,IAAIA,IAAI,IAAI,CAAClB,UAAU,CAACkB,IAAI,CAAC,IAAI,CAACpB,KAAK,CAACoB,IAAI,CAAC,EAAE;MAC7CA,IAAI,GAAGA,IAAI,CAACgD,MAAM;IACpB;IACA,OAAOhD,IAAI,IAAIpB,KAAK,CAACoB,IAAI,CAAC,EAAE;MAC1B,IAAIuD,QAAQ,CAACvD,IAAI,EAAE,CAAC,CAAC,EAAE;QACrB;QACA,IAAI,CAACqD,GAAG,CAACG,QAAQ,CAACxD,IAAI,CAAC,EAAE;UACvBqD,GAAG,CAACnB,IAAI,CAAClC,IAAI,CAAC;QAChB;QACA;MACF;MACAA,IAAI,GAAGA,IAAI,CAACgD,MAAM;IACpB;EACF,CAAC,CAAC;EAEF,OAAO,IAAI,CAACrD,KAAK,CAAC0D,GAAG,CAAC;AACxB;AAEA;;;;;;;;;;;;;;;;AAgBA,OAAO,MAAMd,IAAI,GAGON,cAAc,CAAEjC,IAAI,IAAKX,kBAAkB,CAACW,IAAI,CAAC,CAAC;AAE1E;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMyD,OAAO,GAGI7B,QAAQ,CAAE5B,IAAI,IAAI;EACxC,MAAMwB,OAAO,GAAG,EAAE;EAClB,OAAOxB,IAAI,CAACuC,IAAI,EAAE;IAChBvC,IAAI,GAAGA,IAAI,CAACuC,IAAI;IAChB,IAAI3D,KAAK,CAACoB,IAAI,CAAC,EAAEwB,OAAO,CAACU,IAAI,CAAClC,IAAI,CAAC;EACrC;EACA,OAAOwB,OAAO;AAChB,CAAC,EAAEoB,iBAAiB,CAAC;AAErB;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMc,SAAS,GAIEvB,WAAW,CAChCwB,EAAE,IAAKtE,kBAAkB,CAACsE,EAAE,CAAC,EAC9Bf,iBAAiB,CAClB;AAED;;;;;;;;;;;;;;;;AAgBA,OAAO,MAAMgB,IAAI,GAGO3B,cAAc,CAAEjC,IAAI,IAAKV,kBAAkB,CAACU,IAAI,CAAC,CAAC;AAE1E;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAM6D,OAAO,GAGIjC,QAAQ,CAAE5B,IAAI,IAAI;EACxC,MAAMwB,OAAO,GAAG,EAAE;EAClB,OAAOxB,IAAI,CAAC4D,IAAI,EAAE;IAChB5D,IAAI,GAAGA,IAAI,CAAC4D,IAAI;IAChB,IAAIhF,KAAK,CAACoB,IAAI,CAAC,EAAEwB,OAAO,CAACU,IAAI,CAAClC,IAAI,CAAC;EACrC;EACA,OAAOwB,OAAO;AAChB,CAAC,EAAEoB,iBAAiB,CAAC;AAErB;;;;;;;;;;;;;;;;;AAiBA,OAAO,MAAMkB,SAAS,GAIE3B,WAAW,CAChCwB,EAAE,IAAKrE,kBAAkB,CAACqE,EAAE,CAAC,EAC9Bf,iBAAiB,CAClB;AAED;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAMmB,QAAQ,GAGGnC,QAAQ,CAC7B5B,IAAI,IACHZ,WAAW,CAACY,IAAI,CAAC,CAACD,MAAM,CAAE4D,EAAE,IAAoB/E,KAAK,CAAC+E,EAAE,CAAC,IAAIA,EAAE,KAAK3D,IAAI,CAAC,EAC3ET,UAAU,CACX;AAED;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMmB,QAAQ,GAGGkB,QAAQ,CAC7B5B,IAAI,IAAKb,WAAW,CAACa,IAAI,CAAC,CAACD,MAAM,CAACnB,KAAK,CAAC,EACzCgE,iBAAiB,CAClB;AAED;;;;;;;;;;;;;;;AAeA,OAAM,SAAUoB,QAAQA,CAAA;EAGtB,MAAMxD,KAAK,GAAG,IAAI,CAACX,OAAO,EAAE,CAAC8B,MAAM,CACjC,CAACsC,QAAQ,EAAEjE,IAAI,KACbnB,WAAW,CAACmB,IAAI,CAAC,GAAGiE,QAAQ,CAACjC,MAAM,CAAChC,IAAI,CAACU,QAAQ,CAAC,GAAGuD,QAAQ,EAC/D,EAAE,CACH;EACD,OAAO,IAAI,CAACtE,KAAK,CAACa,KAAK,CAAC;AAC1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAM,SAAU0D,IAAIA,CAElB5C,EAAiD;EAEjD,IAAIQ,CAAC,GAAG,CAAC;EACT,MAAMqC,GAAG,GAAG,IAAI,CAACzC,MAAM;EACvB,OAAOI,CAAC,GAAGqC,GAAG,IAAI7C,EAAE,CAACqB,IAAI,CAAC,IAAI,CAACb,CAAC,CAAC,EAAEA,CAAC,EAAE,IAAI,CAACA,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,EAAEA,CAAC;EAC7D,OAAO,IAAI;AACb;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAM,SAAUsC,GAAGA,CAEjB9C,EAA6D;EAE7D,IAAId,KAAK,GAAQ,EAAE;EACnB,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IACpC,MAAM6B,EAAE,GAAG,IAAI,CAAC7B,CAAC,CAAC;IAClB,MAAMuC,GAAG,GAAG/C,EAAE,CAACqB,IAAI,CAACgB,EAAE,EAAE7B,CAAC,EAAE6B,EAAE,CAAC;IAC9B,IAAIU,GAAG,IAAI,IAAI,EAAE;MACf7D,KAAK,GAAGA,KAAK,CAACwB,MAAM,CAACqC,GAAG,CAAC;IAC3B;EACF;EACA,OAAO,IAAI,CAAC1E,KAAK,CAACa,KAAK,CAAC;AAC1B;AAEA;;;;;;AAMA,SAASkC,WAAWA,CAClB4B,KAAyC;EAEzC,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE;IAC/B,OAAO,CAACX,EAAE,EAAE7B,CAAC,KAAMwC,KAA2B,CAAC3B,IAAI,CAACgB,EAAE,EAAE7B,CAAC,EAAE6B,EAAE,CAAC;EAChE;EACA,IAAI1E,SAAS,CAAIqF,KAAK,CAAC,EAAE;IACvB,OAAQX,EAAE,IAAKd,KAAK,CAAC0B,SAAS,CAACf,QAAQ,CAACb,IAAI,CAAC2B,KAAK,EAAEX,EAAE,CAAC;EACzD;EACA,OAAO,UAAUA,EAAE;IACjB,OAAOW,KAAK,KAAKX,EAAE;EACrB,CAAC;AACH;AAqEA,OAAM,SAAU5D,MAAMA,CAEpBuE,KAAyB;;EAEzB,OAAO,IAAI,CAAC3E,KAAK,CACf8B,WAAW,CAAC,IAAI,CAAC5B,OAAO,EAAE,EAAEyE,KAAK,EAAE,IAAI,CAAC3D,OAAO,CAACI,OAAO,EAAE,CAAAF,EAAA,OAAI,CAACC,KAAK,cAAAD,EAAA,uBAAAA,EAAA,CAAG,CAAC,CAAC,CAAC,CAC1E;AACH;AAEA,OAAM,SAAUY,WAAWA,CACzB+C,KAAU,EACVF,KAAyB,EACzBvD,OAAiB,EACjBH,IAAe;EAEf,OAAO,OAAO0D,KAAK,KAAK,QAAQ,GAC5BvF,MAAM,CAACgB,MAAM,CAACuE,KAAK,EAAEE,KAA6B,EAAE;IAAEzD,OAAO;IAAEH;EAAI,CAAE,CAAC,GACtE4D,KAAK,CAACzE,MAAM,CAAC2C,WAAW,CAAI4B,KAAK,CAAC,CAAC;AACzC;AAEA;;;;;;;;;;;;AAYA,OAAM,SAAU7B,EAAEA,CAEhBnC,QAA6B;EAE7B,MAAMkE,KAAK,GAAG,IAAI,CAAC3E,OAAO,EAAE;EAC5B,OAAO,OAAOS,QAAQ,KAAK,QAAQ,GAC/BvB,MAAM,CAACkB,IAAI,CACRuE,KAA8B,CAACzE,MAAM,CAACnB,KAAK,CAAC,EAC7C0B,QAAQ,EACR,IAAI,CAACK,OAAO,CACb,GACDL,QAAQ,GACNkE,KAAK,CAACvE,IAAI,CAACyC,WAAW,CAAIpC,QAAQ,CAAC,CAAC,GACpC,KAAK;AACb;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAM,SAAUmE,GAAGA,CAEjBH,KAAyB;EAEzB,IAAIE,KAAK,GAAG,IAAI,CAAC3E,OAAO,EAAE;EAE1B,IAAI,OAAOyE,KAAK,KAAK,QAAQ,EAAE;IAC7B,MAAMjC,OAAO,GAAG,IAAIU,GAAG,CAAUhE,MAAM,CAACgB,MAAM,CAACuE,KAAK,EAAEE,KAAK,EAAE,IAAI,CAAC7D,OAAO,CAAC,CAAC;IAC3E6D,KAAK,GAAGA,KAAK,CAACzE,MAAM,CAAE4D,EAAE,IAAK,CAACtB,OAAO,CAACqC,GAAG,CAACf,EAAE,CAAC,CAAC;EAChD,CAAC,MAAM;IACL,MAAMgB,QAAQ,GAAGjC,WAAW,CAAC4B,KAAK,CAAC;IACnCE,KAAK,GAAGA,KAAK,CAACzE,MAAM,CAAC,CAAC4D,EAAE,EAAE7B,CAAC,KAAK,CAAC6C,QAAQ,CAAChB,EAAE,EAAE7B,CAAC,CAAC,CAAC;EACnD;EAEA,OAAO,IAAI,CAACnC,KAAK,CAAC6E,KAAK,CAAC;AAC1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,OAAM,SAAUE,GAAGA,CAEjBhF,kBAAuD;EAEvD,OAAO,IAAI,CAACK,MAAM,CAChB,OAAOL,kBAAkB,KAAK,QAAQ;EAClC;EACA,QAAQA,kBAAkB,GAAG,GAC7B,CAACkF,CAAC,EAAEjB,EAAE,KAAK,IAAI,CAAChE,KAAK,CAACgE,EAAE,CAAC,CAAClE,IAAI,CAACC,kBAAkB,CAAC,CAACgC,MAAM,GAAG,CAAC,CAClE;AACH;AAEA;;;;;;;;;;;;;;AAcA,OAAM,SAAUmD,KAAKA,CAAA;EACnB,OAAO,IAAI,CAACnD,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACrD;AAEA;;;;;;;;;;;;;;AAcA,OAAM,SAAUmF,IAAIA,CAAA;EAClB,OAAO,IAAI,CAACpD,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC/B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC+B,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI;AACnE;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,SAAUqD,EAAEA,CAAsBjD,CAAS;;EAC/CA,CAAC,GAAG,CAACA,CAAC;EAEN;EACA,IAAIA,CAAC,KAAK,CAAC,IAAI,IAAI,CAACJ,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI;EAE5C,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACJ,MAAM,GAAGI,CAAC;EAC9B,OAAO,IAAI,CAACnC,KAAK,CAAC,CAAAkB,EAAA,OAAI,CAACiB,CAAC,CAAC,cAAAjB,EAAA,cAAAA,EAAA,GAAI,EAAE,CAAC;AAClC;AAkCA,OAAM,SAAUmE,GAAGA,CAAsBlD,CAAU;EACjD,IAAIA,CAAC,IAAI,IAAI,EAAE;IACb,OAAO,IAAI,CAACjC,OAAO,EAAE;EACvB;EACA,OAAO,IAAI,CAACiC,CAAC,GAAG,CAAC,GAAG,IAAI,CAACJ,MAAM,GAAGI,CAAC,GAAGA,CAAC,CAAC;AAC1C;AAEA;;;;;;;;;;;;AAYA,OAAM,SAAUjC,OAAOA,CAAA;EACrB,OAAQgD,KAAK,CAAC0B,SAAiB,CAACU,KAAK,CAACtC,IAAI,CAAC,IAAI,CAAC;AAClD;AAEA;;;;;;;;;;;;;;;;;;AAkBA,OAAM,SAAUuC,KAAKA,CAEnBC,gBAAsD;EAEtD,IAAIC,SAA2B;EAC/B,IAAIC,MAAe;EAEnB,IAAIF,gBAAgB,IAAI,IAAI,EAAE;IAC5BC,SAAS,GAAG,IAAI,CAACpC,MAAM,EAAE,CAACtC,QAAQ,EAAE;IACpC2E,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC,MAAM,IAAI,OAAOF,gBAAgB,KAAK,QAAQ,EAAE;IAC/CC,SAAS,GAAG,IAAI,CAACzF,KAAK,CAAUwF,gBAAgB,CAAC;IACjDE,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC;EAClB,CAAC,MAAM;IACL;IACAD,SAAS,GAAG,IAAI;IAChBC,MAAM,GAAGpG,SAAS,CAACkG,gBAAgB,CAAC,GAChCA,gBAAgB,CAAC,CAAC,CAAC,GACnBA,gBAAgB;EACtB;EAEA,OAAOtC,KAAK,CAAC0B,SAAS,CAACe,OAAO,CAAC3C,IAAI,CAACyC,SAAS,EAAEC,MAAM,CAAC;AACxD;AAEA;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAM,SAAUJ,KAAKA,CAEnBM,KAAc,EACdC,GAAY;EAEZ,OAAO,IAAI,CAAC7F,KAAK,CAAIkD,KAAK,CAAC0B,SAAS,CAACU,KAAK,CAACtC,IAAI,CAAC,IAAI,EAAE4C,KAAK,EAAEC,GAAG,CAAC,CAAC;AACpE;AAEA;;;;;;;;;;;;;;;AAeA,OAAM,SAAUA,GAAGA,CAAA;;EACjB,OAAO,CAAA3E,EAAA,GAAC,IAAI,CAAC4E,UAAsC,cAAA5E,EAAA,cAAAA,EAAA,GAAI,IAAI,CAAClB,KAAK,CAAC,EAAE,CAAC;AACvE;AAEA;;;;;;;;;;;;;;;;AAgBA,OAAM,SAAU+F,GAAGA,CAEjBC,KAAoC,EACpC7F,OAA6B;EAE7B,MAAM8F,SAAS,GAAG,IAAI,CAACjG,KAAK,CAACgG,KAAK,EAAE7F,OAAO,CAAC;EAC5C,MAAMkE,QAAQ,GAAGzE,UAAU,CAAC,CAAC,GAAG,IAAI,CAACyF,GAAG,EAAE,EAAE,GAAGY,SAAS,CAACZ,GAAG,EAAE,CAAC,CAAC;EAChE,OAAO,IAAI,CAACrF,KAAK,CAACqE,QAAQ,CAAC;AAC7B;AAEA;;;;;;;;;;;;;;;;AAgBA,OAAM,SAAU6B,OAAOA,CAErBvF,QAAiB;EAEjB,OAAO,IAAI,CAACmF,UAAU,GAClB,IAAI,CAACC,GAAG,CACNpF,QAAQ,GAAG,IAAI,CAACmF,UAAU,CAAC1F,MAAM,CAACO,QAAQ,CAAC,GAAG,IAAI,CAACmF,UAAU,CAC9D,GACD,IAAI;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}