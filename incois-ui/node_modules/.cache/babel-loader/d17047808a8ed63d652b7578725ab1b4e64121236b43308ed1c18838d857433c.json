{"ast":null,"code":"var _jsxFileName = \"D:\\\\Map\\\\incois-ui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Fix missing Leaflet icons\nimport markerIcon2x from \"leaflet/dist/images/marker-icon-2x.png\";\nimport markerIcon from \"leaflet/dist/images/marker-icon.png\";\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow\n});\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, ArcElement, Title, Tooltip, Legend);\nfunction App() {\n  _s();\n  const [buoys, setBuoys] = useState([]);\n  const [filteredBuoys, setFilteredBuoys] = useState([]);\n  const [selectedBuoy, setSelectedBuoy] = useState(null);\n  const [stats, setStats] = useState({\n    totalBuoys: 0,\n    activeBuoys: 0,\n    recentData: 0,\n    avgTemperature: 0,\n    avgSalinity: 0,\n    buoysWithData: 0,\n    buoysWithoutData: 0\n  });\n  const [networks, setNetworks] = useState({\n    OMNI: 0,\n    RAMA: 0,\n    ARGO: 0,\n    MOORED: 0\n  });\n  const [loading, setLoading] = useState(false);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [yearRange, setYearRange] = useState([]);\n  const [realTimeMode, setRealTimeMode] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Filter states\n  const [selectedRegion, setSelectedRegion] = useState('all');\n  const [selectedNetwork, setSelectedNetwork] = useState('all');\n  const [showActiveOnly, setShowActiveOnly] = useState(false);\n  const regions = {\n    indian_ocean: {\n      name: 'Indian Ocean',\n      bounds: {\n        north: 30,\n        south: -60,\n        east: 100,\n        west: 40\n      }\n    },\n    bay_of_bengal: {\n      name: 'Bay of Bengal',\n      bounds: {\n        north: 25,\n        south: 5,\n        east: 95,\n        west: 80\n      }\n    },\n    arabian_sea: {\n      name: 'Arabian Sea',\n      bounds: {\n        north: 30,\n        south: 0,\n        east: 80,\n        west: 50\n      }\n    },\n    equatorial_indian: {\n      name: 'Equatorial Indian Ocean',\n      bounds: {\n        north: 10,\n        south: -10,\n        east: 100,\n        west: 50\n      }\n    },\n    southern_indian: {\n      name: 'Southern Indian Ocean',\n      bounds: {\n        north: -10,\n        south: -60,\n        east: 120,\n        west: 40\n      }\n    }\n  };\n\n  // Generate year range\n  useEffect(() => {\n    const years = [];\n    for (let year = 2012; year <= new Date().getFullYear(); year++) years.push(year);\n    setYearRange(years.reverse());\n  }, []);\n\n  // Fetch buoys data\n  useEffect(() => {\n    const fetchBuoys = async () => {\n      try {\n        var _response$data;\n        setError(null);\n        const response = await axios.get(\"http://localhost:5000/api/ocean-buoys\");\n        if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.success) {\n          setBuoys(response.data.buoys || []);\n          setStats(response.data.stats || stats);\n          setNetworks(response.data.networks || networks);\n        } else {\n          setError(\"No data received from server\");\n        }\n      } catch (err) {\n        console.error(err);\n        setError(`Failed to fetch buoy data: ${err.message}`);\n      }\n    };\n    fetchBuoys();\n  }, []);\n\n  // Filter buoys\n  useEffect(() => {\n    let filtered = [...buoys];\n    if (selectedRegion !== 'all') {\n      const region = regions[selectedRegion];\n      filtered = filtered.filter(b => b.lat <= region.bounds.north && b.lat >= region.bounds.south && b.lon <= region.bounds.east && b.lon >= region.bounds.west);\n    }\n    if (selectedNetwork !== 'all') filtered = filtered.filter(b => b.type === selectedNetwork);\n    if (showActiveOnly) filtered = filtered.filter(b => b.status === 'active');\n    setFilteredBuoys(filtered);\n  }, [buoys, selectedRegion, selectedNetwork, showActiveOnly]);\n\n  // Filtered stats\n  const filteredStats = useMemo(() => ({\n    total: filteredBuoys.length,\n    active: filteredBuoys.filter(b => b.status === 'active').length,\n    withData: filteredBuoys.filter(b => b.parameters).length,\n    networks: {\n      ARGO: filteredBuoys.filter(b => b.type === 'ARGO').length,\n      OMNI: filteredBuoys.filter(b => b.type === 'OMNI').length,\n      RAMA: filteredBuoys.filter(b => b.type === 'RAMA').length,\n      MOORED: filteredBuoys.filter(b => b.type === 'MOORED').length\n    }\n  }), [filteredBuoys]);\n\n  // Fetch single buoy details\n  const fetchBuoyDetails = async buoyId => {\n    setLoading(true);\n    setError(null);\n    try {\n      var _res$data;\n      const res = await axios.get(`http://localhost:5000/api/ocean-buoy/${buoyId}`);\n      if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.success) setSelectedBuoy(res.data.data);else setError(`No data for buoy ${buoyId}`);\n    } catch (err) {\n      setError(`Failed to fetch buoy details: ${err.message}`);\n    }\n    setLoading(false);\n  };\n\n  // CSV download\n  const downloadCSV = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/ocean-data-csv/${selectedYear}`, {\n        responseType: 'blob'\n      });\n      const blob = new Blob([res.data], {\n        type: 'text/csv'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `incois_ocean_data_${selectedYear}.csv`;\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      alert(`CSV download failed: ${err.message}`);\n    }\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setSelectedRegion('all');\n    setSelectedNetwork('all');\n    setShowActiveOnly(false);\n  };\n\n  // Parameter safe access\n  const getParameterValue = (buoy, key, defaultValue = 'N/A') => {\n    var _buoy$parameters$key, _buoy$parameters;\n    return (_buoy$parameters$key = buoy === null || buoy === void 0 ? void 0 : (_buoy$parameters = buoy.parameters) === null || _buoy$parameters === void 0 ? void 0 : _buoy$parameters[key]) !== null && _buoy$parameters$key !== void 0 ? _buoy$parameters$key : defaultValue;\n  };\n\n  // Format coordinates\n  const formatCoordinates = buoy => {\n    var _buoy$lat, _buoy$lon;\n    return `${((_buoy$lat = buoy.lat) === null || _buoy$lat === void 0 ? void 0 : _buoy$lat.toFixed(4)) || 'N/A'}°N, ${((_buoy$lon = buoy.lon) === null || _buoy$lon === void 0 ? void 0 : _buoy$lon.toFixed(4)) || 'N/A'}°E`;\n  };\n\n  // Buoy Icon\n  const createBuoyIcon = (type, color, isSelected = false) => {\n    const size = isSelected ? 32 : 28;\n    return new L.Icon({\n      iconUrl: 'data:image/svg+xml;base64,' + btoa(`\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"${size / 2}\" cy=\"${size / 2}\" r=\"${size / 2 - 2}\" fill=\"${color}\" stroke=\"#fff\" stroke-width=\"2\"/>\n          <text x=\"${size / 2}\" y=\"${size / 2 + 4}\" text-anchor=\"middle\" fill=\"white\" font-size=\"10\" font-weight=\"bold\">${type.charAt(0)}</text>\n          ${isSelected ? `<circle cx=\"${size / 2}\" cy=\"${size / 2}\" r=\"${size / 2 - 1}\" fill=\"none\" stroke=\"#ffff00\" stroke-width=\"2\"/>` : ''}\n        </svg>\n      `),\n      iconSize: [size, size],\n      iconAnchor: [size / 2, size / 2],\n      popupAnchor: [0, -size / 2]\n    });\n  };\n  const getIconForBuoy = (buoy, isSelected = false) => {\n    const colors = {\n      OMNI: '#0ea5e9',\n      RAMA: '#10b981',\n      ARGO: '#8b5cf6',\n      MOORED: '#f59e0b'\n    };\n    return createBuoyIcon(buoy.type, colors[buoy.type] || '#0ea5e9', isSelected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-900 via-blue-700 to-cyan-500 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"p-6 text-center font-extrabold text-3xl shadow-xl tracking-wide\",\n      children: \"\\uD83C\\uDF0A INCOIS Ocean Observation Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-6 mt-4 p-4 bg-red-500/20 rounded-lg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 lg:grid-cols-2 gap-6 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/15 backdrop-blur-lg rounded-3xl shadow-2xl overflow-hidden border border-white/20\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [12, 77],\n          zoom: 5,\n          style: {\n            height: \"500px\",\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 OpenStreetMap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), filteredBuoys.map((b, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n            position: [b.lat || 0, b.lon || 0],\n            icon: getIconForBuoy(b, (selectedBuoy === null || selectedBuoy === void 0 ? void 0 : selectedBuoy.id) === b.id),\n            eventHandlers: {\n              click: () => fetchBuoyDetails(b.id)\n            },\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-black p-3 min-w-[280px]\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: b.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Network: \", b.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Status: \", b.status]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Coordinates: \", formatCoordinates(b)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)\n          }, b.id + idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/20 backdrop-blur-md rounded-2xl shadow-xl border border-white/30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dupiHDuFbX0ZVIpZVTMj33f6/gY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useMemo","axios","MapContainer","TileLayer","Marker","Popup","L","Line","Bar","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","markerIcon2x","markerIcon","markerShadow","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","register","App","_s","buoys","setBuoys","filteredBuoys","setFilteredBuoys","selectedBuoy","setSelectedBuoy","stats","setStats","totalBuoys","activeBuoys","recentData","avgTemperature","avgSalinity","buoysWithData","buoysWithoutData","networks","setNetworks","OMNI","RAMA","ARGO","MOORED","loading","setLoading","selectedYear","setSelectedYear","Date","getFullYear","yearRange","setYearRange","realTimeMode","setRealTimeMode","error","setError","selectedRegion","setSelectedRegion","selectedNetwork","setSelectedNetwork","showActiveOnly","setShowActiveOnly","regions","indian_ocean","name","bounds","north","south","east","west","bay_of_bengal","arabian_sea","equatorial_indian","southern_indian","years","year","push","reverse","fetchBuoys","_response$data","response","get","data","success","err","console","message","filtered","region","filter","b","lat","lon","type","status","filteredStats","total","length","active","withData","parameters","fetchBuoyDetails","buoyId","_res$data","res","downloadCSV","responseType","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","alert","clearFilters","getParameterValue","buoy","key","defaultValue","_buoy$parameters$key","_buoy$parameters","formatCoordinates","_buoy$lat","_buoy$lon","toFixed","createBuoyIcon","color","isSelected","size","btoa","charAt","iconSize","iconAnchor","popupAnchor","getIconForBuoy","colors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","attribution","map","idx","position","icon","id","eventHandlers","_c","$RefreshReg$"],"sources":["D:/Map/incois-ui/src/App.js"],"sourcesContent":["import { useEffect, useState, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport L from \"leaflet\";\nimport { Line, Bar, Doughnut } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\n// Fix missing Leaflet icons\nimport markerIcon2x from \"leaflet/dist/images/marker-icon-2x.png\";\nimport markerIcon from \"leaflet/dist/images/marker-icon.png\";\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\n\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: markerIcon2x,\n  iconUrl: markerIcon,\n  shadowUrl: markerShadow,\n});\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nfunction App() {\n  const [buoys, setBuoys] = useState([]);\n  const [filteredBuoys, setFilteredBuoys] = useState([]);\n  const [selectedBuoy, setSelectedBuoy] = useState(null);\n  const [stats, setStats] = useState({\n    totalBuoys: 0,\n    activeBuoys: 0,\n    recentData: 0,\n    avgTemperature: 0,\n    avgSalinity: 0,\n    buoysWithData: 0,\n    buoysWithoutData: 0\n  });\n  const [networks, setNetworks] = useState({ OMNI: 0, RAMA: 0, ARGO: 0, MOORED: 0 });\n  const [loading, setLoading] = useState(false);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [yearRange, setYearRange] = useState([]);\n  const [realTimeMode, setRealTimeMode] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Filter states\n  const [selectedRegion, setSelectedRegion] = useState('all');\n  const [selectedNetwork, setSelectedNetwork] = useState('all');\n  const [showActiveOnly, setShowActiveOnly] = useState(false);\n\n  const regions = {\n    indian_ocean: { name: 'Indian Ocean', bounds: { north: 30, south: -60, east: 100, west: 40 } },\n    bay_of_bengal: { name: 'Bay of Bengal', bounds: { north: 25, south: 5, east: 95, west: 80 } },\n    arabian_sea: { name: 'Arabian Sea', bounds: { north: 30, south: 0, east: 80, west: 50 } },\n    equatorial_indian: { name: 'Equatorial Indian Ocean', bounds: { north: 10, south: -10, east: 100, west: 50 } },\n    southern_indian: { name: 'Southern Indian Ocean', bounds: { north: -10, south: -60, east: 120, west: 40 } }\n  };\n\n  // Generate year range\n  useEffect(() => {\n    const years = [];\n    for (let year = 2012; year <= new Date().getFullYear(); year++) years.push(year);\n    setYearRange(years.reverse());\n  }, []);\n\n  // Fetch buoys data\n  useEffect(() => {\n    const fetchBuoys = async () => {\n      try {\n        setError(null);\n        const response = await axios.get(\"http://localhost:5000/api/ocean-buoys\");\n        if (response.data?.success) {\n          setBuoys(response.data.buoys || []);\n          setStats(response.data.stats || stats);\n          setNetworks(response.data.networks || networks);\n        } else {\n          setError(\"No data received from server\");\n        }\n      } catch (err) {\n        console.error(err);\n        setError(`Failed to fetch buoy data: ${err.message}`);\n      }\n    };\n    fetchBuoys();\n  }, []);\n\n  // Filter buoys\n  useEffect(() => {\n    let filtered = [...buoys];\n\n    if (selectedRegion !== 'all') {\n      const region = regions[selectedRegion];\n      filtered = filtered.filter(b => b.lat <= region.bounds.north && b.lat >= region.bounds.south && b.lon <= region.bounds.east && b.lon >= region.bounds.west);\n    }\n    if (selectedNetwork !== 'all') filtered = filtered.filter(b => b.type === selectedNetwork);\n    if (showActiveOnly) filtered = filtered.filter(b => b.status === 'active');\n\n    setFilteredBuoys(filtered);\n  }, [buoys, selectedRegion, selectedNetwork, showActiveOnly]);\n\n  // Filtered stats\n  const filteredStats = useMemo(() => ({\n    total: filteredBuoys.length,\n    active: filteredBuoys.filter(b => b.status === 'active').length,\n    withData: filteredBuoys.filter(b => b.parameters).length,\n    networks: {\n      ARGO: filteredBuoys.filter(b => b.type === 'ARGO').length,\n      OMNI: filteredBuoys.filter(b => b.type === 'OMNI').length,\n      RAMA: filteredBuoys.filter(b => b.type === 'RAMA').length,\n      MOORED: filteredBuoys.filter(b => b.type === 'MOORED').length,\n    }\n  }), [filteredBuoys]);\n\n  // Fetch single buoy details\n  const fetchBuoyDetails = async (buoyId) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await axios.get(`http://localhost:5000/api/ocean-buoy/${buoyId}`);\n      if (res.data?.success) setSelectedBuoy(res.data.data);\n      else setError(`No data for buoy ${buoyId}`);\n    } catch (err) {\n      setError(`Failed to fetch buoy details: ${err.message}`);\n    }\n    setLoading(false);\n  };\n\n  // CSV download\n  const downloadCSV = async () => {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/ocean-data-csv/${selectedYear}`, { responseType: 'blob' });\n      const blob = new Blob([res.data], { type: 'text/csv' });\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `incois_ocean_data_${selectedYear}.csv`;\n      link.click();\n      window.URL.revokeObjectURL(url);\n    } catch (err) {\n      alert(`CSV download failed: ${err.message}`);\n    }\n  };\n\n  // Clear filters\n  const clearFilters = () => {\n    setSelectedRegion('all');\n    setSelectedNetwork('all');\n    setShowActiveOnly(false);\n  };\n\n  // Parameter safe access\n  const getParameterValue = (buoy, key, defaultValue = 'N/A') => {\n    return buoy?.parameters?.[key] ?? defaultValue;\n  };\n\n  // Format coordinates\n  const formatCoordinates = (buoy) => `${buoy.lat?.toFixed(4) || 'N/A'}°N, ${buoy.lon?.toFixed(4) || 'N/A'}°E`;\n\n  // Buoy Icon\n  const createBuoyIcon = (type, color, isSelected = false) => {\n    const size = isSelected ? 32 : 28;\n    return new L.Icon({\n      iconUrl: 'data:image/svg+xml;base64,' + btoa(`\n        <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"${size/2}\" cy=\"${size/2}\" r=\"${size/2 - 2}\" fill=\"${color}\" stroke=\"#fff\" stroke-width=\"2\"/>\n          <text x=\"${size/2}\" y=\"${size/2 + 4}\" text-anchor=\"middle\" fill=\"white\" font-size=\"10\" font-weight=\"bold\">${type.charAt(0)}</text>\n          ${isSelected ? `<circle cx=\"${size/2}\" cy=\"${size/2}\" r=\"${size/2 - 1}\" fill=\"none\" stroke=\"#ffff00\" stroke-width=\"2\"/>` : ''}\n        </svg>\n      `),\n      iconSize: [size, size],\n      iconAnchor: [size/2, size/2],\n      popupAnchor: [0, -size/2]\n    });\n  };\n\n  const getIconForBuoy = (buoy, isSelected = false) => {\n    const colors = { OMNI: '#0ea5e9', RAMA: '#10b981', ARGO: '#8b5cf6', MOORED: '#f59e0b' };\n    return createBuoyIcon(buoy.type, colors[buoy.type] || '#0ea5e9', isSelected);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-blue-700 to-cyan-500 text-white\">\n      <header className=\"p-6 text-center font-extrabold text-3xl shadow-xl tracking-wide\">🌊 INCOIS Ocean Observation Dashboard</header>\n      \n      {/* Error */}\n      {error && <div className=\"mx-6 mt-4 p-4 bg-red-500/20 rounded-lg\">{error}</div>}\n\n      {/* Stats & Controls */}\n      {/* ... same as your current JSX ... */}\n      \n      {/* Map */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 p-6\">\n        <div className=\"bg-white/15 backdrop-blur-lg rounded-3xl shadow-2xl overflow-hidden border border-white/20\">\n          <MapContainer center={[12, 77]} zoom={5} style={{ height: \"500px\", width: \"100%\" }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; OpenStreetMap\" />\n            {filteredBuoys.map((b, idx) => (\n              <Marker\n                key={b.id + idx}\n                position={[b.lat || 0, b.lon || 0]}\n                icon={getIconForBuoy(b, selectedBuoy?.id === b.id)}\n                eventHandlers={{ click: () => fetchBuoyDetails(b.id) }}\n              >\n                <Popup>\n                  <div className=\"text-black p-3 min-w-[280px]\">\n                    <strong>{b.id}</strong>\n                    <div>Network: {b.type}</div>\n                    <div>Status: {b.status}</div>\n                    <div>Coordinates: {formatCoordinates(b)}</div>\n                  </div>\n                </Popup>\n              </Marker>\n            ))}\n          </MapContainer>\n        </div>\n\n        {/* Buoy Analysis */}\n        <div className=\"bg-white/20 backdrop-blur-md rounded-2xl shadow-xl border border-white/30\">\n          {/* Detailed buoy info */}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}