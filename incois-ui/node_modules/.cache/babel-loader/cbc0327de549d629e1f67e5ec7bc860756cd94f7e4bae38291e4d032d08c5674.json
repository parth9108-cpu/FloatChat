{"ast":null,"code":"var _jsxFileName = \"D:\\\\Map - Copy - Copy\\\\incois-ui\\\\src\\\\index.js\";\n// src/index.js - Updated for Multi-Language OceanFront\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ðŸŒŠ Initialize the OceanFront Application\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 3\n}, this));\n\n// ðŸ”§ Optional: Enhanced Performance Monitoring for OceanFront\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// Enhanced performance monitoring for oceanographic data app\nconst logOceanFrontVitals = metric => {\n  // Log performance metrics with OceanFront context\n  console.log(`ðŸŒŠ OceanFront Performance: ${metric.name}`, {\n    value: metric.value,\n    rating: metric.rating,\n    timestamp: new Date().toISOString()\n  });\n\n  // Optional: Send to analytics endpoint\n  // fetch('/api/analytics', {\n  //   method: 'POST',\n  //   body: JSON.stringify({\n  //     app: 'OceanFront',\n  //     metric: metric.name,\n  //     value: metric.value,\n  //     rating: metric.rating,\n  //     timestamp: new Date().toISOString()\n  //   })\n  // });\n};\n\n// Enable performance monitoring (uncomment to activate)\n// reportWebVitals(logOceanFrontVitals);\n\n// Standard performance monitoring (comment out the above and use this for basic logging)\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","logOceanFrontVitals","metric","console","log","name","value","rating","timestamp","Date","toISOString"],"sources":["D:/Map - Copy - Copy/incois-ui/src/index.js"],"sourcesContent":["// src/index.js - Updated for Multi-Language OceanFront\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// ðŸŒŠ Initialize the OceanFront Application\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// ðŸ”§ Optional: Enhanced Performance Monitoring for OceanFront\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// Enhanced performance monitoring for oceanographic data app\nconst logOceanFrontVitals = (metric) => {\n  // Log performance metrics with OceanFront context\n  console.log(`ðŸŒŠ OceanFront Performance: ${metric.name}`, {\n    value: metric.value,\n    rating: metric.rating,\n    timestamp: new Date().toISOString()\n  });\n\n  // Optional: Send to analytics endpoint\n  // fetch('/api/analytics', {\n  //   method: 'POST',\n  //   body: JSON.stringify({\n  //     app: 'OceanFront',\n  //     metric: metric.name,\n  //     value: metric.value,\n  //     rating: metric.rating,\n  //     timestamp: new Date().toISOString()\n  //   })\n  // });\n};\n\n// Enable performance monitoring (uncomment to activate)\n// reportWebVitals(logOceanFrontVitals);\n\n// Standard performance monitoring (comment out the above and use this for basic logging)\nreportWebVitals();\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,cACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA,MAAMC,mBAAmB,GAAIC,MAAM,IAAK;EACtC;EACAC,OAAO,CAACC,GAAG,CAAC,8BAA8BF,MAAM,CAACG,IAAI,EAAE,EAAE;IACvDC,KAAK,EAAEJ,MAAM,CAACI,KAAK;IACnBC,MAAM,EAAEL,MAAM,CAACK,MAAM;IACrBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EACpC,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED;AACA;;AAEA;AACAvB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}